#!/bin/bash

# üß™ Script de Execu√ß√£o de Testes - SalesAI API
# Este script facilita a execu√ß√£o dos testes da API

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                   üß™ TESTES SALESAI API                     ‚ïë"
echo "‚ïë                      Script Helper                          ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

# Fun√ß√£o para verificar se o servidor est√° rodando
check_server() {
    echo "üîç Verificando servidor..."
    if curl -s http://localhost:3001/health > /dev/null 2>&1; then
        echo "‚úÖ Servidor est√° rodando"
        return 0
    else
        echo "‚ùå Servidor n√£o est√° rodando"
        return 1
    fi
}

# Fun√ß√£o para iniciar servidor em modo teste
start_test_server() {
    echo "üöÄ Iniciando servidor em modo teste..."
    cd backend
    
    # Parar servidor existente se houver
    pkill -f "node.*src/app.js" 2>/dev/null
    sleep 2
    
    # Iniciar servidor em background
    NODE_ENV=test node src/app.js &
    SERVER_PID=$!
    
    echo "‚è≥ Aguardando servidor inicializar..."
    sleep 5
    
    if check_server; then
        echo "‚úÖ Servidor iniciado com PID: $SERVER_PID"
        cd ..
        return 0
    else
        echo "‚ùå Falha ao iniciar servidor"
        cd ..
        return 1
    fi
}

# Fun√ß√£o para executar teste r√°pido
run_quick_test() {
    echo ""
    echo "üèÉ‚Äç‚ôÇÔ∏è Executando teste r√°pido..."
    echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
    node quick-test.js
}

# Fun√ß√£o para executar teste completo
run_full_test() {
    echo ""
    echo "üî¨ Executando teste completo..."
    echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
    node test-api.js
}

# Menu principal
show_menu() {
    echo ""
    echo "Escolha uma op√ß√£o:"
    echo "1) üèÉ‚Äç‚ôÇÔ∏è Teste R√°pido (quick-test.js)"
    echo "2) üî¨ Teste Completo (test-api.js)"
    echo "3) üöÄ Iniciar Servidor + Teste R√°pido"
    echo "4) üîß Iniciar Servidor + Teste Completo"
    echo "5) üìã Ver Relat√≥rio de Testes"
    echo "6) ‚ùå Sair"
    echo ""
    read -p "Digite sua escolha (1-6): " choice
}

# Loop principal
while true; do
    show_menu
    
    case $choice in
        1)
            if check_server; then
                run_quick_test
            else
                echo "‚ùå Servidor n√£o est√° rodando. Use a op√ß√£o 3 para iniciar."
            fi
            ;;
        2)
            if check_server; then
                run_full_test
            else
                echo "‚ùå Servidor n√£o est√° rodando. Use a op√ß√£o 4 para iniciar."
            fi
            ;;
        3)
            if start_test_server; then
                run_quick_test
            fi
            ;;
        4)
            if start_test_server; then
                run_full_test
            fi
            ;;
        5)
            echo ""
            echo "üìã Abrindo relat√≥rio de testes..."
            if [ -f "REPORT-API-TESTS.md" ]; then
                cat REPORT-API-TESTS.md
            else
                echo "‚ùå Relat√≥rio n√£o encontrado"
            fi
            ;;
        6)
            echo ""
            echo "üëã Saindo..."
            # Parar servidor se foi iniciado por este script
            if [ ! -z "$SERVER_PID" ]; then
                echo "üõë Parando servidor..."
                kill $SERVER_PID 2>/dev/null
            fi
            exit 0
            ;;
        *)
            echo "‚ùå Op√ß√£o inv√°lida. Tente novamente."
            ;;
    esac
    
    echo ""
    read -p "Pressione ENTER para continuar..."
done
